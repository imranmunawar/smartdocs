"""
Django settings for document_generator project.

Generated by 'django-admin startproject' using Django 5.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
from typing import List

import environ
import os
import boto3
from django.contrib.auth import get_user_model
from django.urls import reverse_lazy
from django_sso.sso_service.backend import acceptor, EventAcceptor
from . import env_values

env = environ.Env(
    # set casting, default value
    DEBUG=(bool, False)
)
# reading .env file
environ.Env.read_env()

# False if not in os.environ
DEBUG = os.getenv('DEBUG')

SECRET_KEY = os.getenv('SECRET_KEY')

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'generator_app',
    'django_sso.sso_service',
    'storages',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'generator_app.middleware.FileCleanupMiddleware',
    'generator_app.middleware.AutoLogoutMiddleware',
    'generator_app.middleware.SessionCleanupMiddleware',
]

# Django variable. URL for unlogged users. We redirect it to our view.
LOGIN_URL = 'login'
LOGIN_REDIRECT_URL = '/user_dashboard'
LOGOUT_REDIRECT_URL = 'logout'


ROOT_URLCONF = 'document_generator.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join('generator_app', 'templates')
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'document_generator.context_processor.google_analytics_processor',
            ],
        },
    },
]

WSGI_APPLICATION = 'document_generator.wsgi.application'


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'generator_app.CustomUser'

AUTHENTICATION_BACKENDS = ['generator_app.backends.EmailBackend']

SAVED_DOCUMENTS = os.path.join(BASE_DIR, 'generator_app', 'documents')

DOCUMENT_TEMPLATE_FILES = os.path.join(BASE_DIR, 'generator_app', 'template_files')

IMAGE_FILES = os.path.join(BASE_DIR, 'generator_app', 'static', 'document_images')

DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'

SESSION_COOKIE_AGE = 14400  # 3 hours in seconds
SESSION_EXPIRE_AT_BROWSER_CLOSE = True
SESSION_SAVE_EVERY_REQUEST = True

############################################################
## Stripe Settings
############################################################

STRIPE_SECRET_KEY = os.getenv("STRIPE_SECRET_KEY", None)

STRIPE_IS_ACTIVE = False
if STRIPE_SECRET_KEY:
    STRIPE_IS_ACTIVE = True
